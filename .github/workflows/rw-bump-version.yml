# (C) 2024 GoodData Corporation

#This workflow automatically bumps the version of the project based on the specified version bump type and prerelease ID. 
#It also commits the changes to the source branch.
#when skip-bump is set to true, it just returns the current version

name: rw ~ Rush ~ Bump version
on:
  workflow_call:
    inputs:
      source-branch:
        required: true
        description: 'The name of the source branch'
        type: string
      bump:
        required: true
        description: 'The type of version bump (major, minor, patch)'
        type: string
      prerelease-id:
        required: true
        description: 'The prerelease ID (alpha, beta, etc.)'
        type: string
      skip-bump:
          required: false
          default: false
          description: "Skip bumping the version and just return the current version"
          type: boolean
    outputs:
      version:
        description: "Version which was created"
        value: ${{ jobs.bump-version.outputs.version }}

jobs:
  bump-version:
    runs-on: [ubuntu-latest]
    outputs:
      version: ${{ steps.version.outputs.version }}
    container:
      image: node:18.17.0-bullseye
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.source-branch }}
          token: ${{ secrets.TOKEN_GITHUB_YENKINS_ADMIN }} 

      - name: Add repository to git safe directories to avoid dubious ownership issue
        run: git config --global --add safe.directory $GITHUB_WORKSPACE
      - name: Bump rush version and commit to source branch #if skip-bump is set to true, it just returns the current version
        if: ${{ !inputs.skip-bump }} 
        env:
          BUMP: ${{ inputs.bump }}
          PRERELEASE_ID: ${{ inputs.prerelease-id }}
        run: |
          npm install -g @microsoft/rush
          git config --global user.email "git-action@gooddata.com"
          git config --global user.name "git-action"
          # it needs git configured already user.email/name
          rush version --bump --override-bump $BUMP --override-prerelease-id $PRERELEASE_ID
          git add -A
          VERSION=$(node -p "require('./libs/sdk-ui/package.json').version")
          git commit -m "Bump versions to $VERSION"
          git push origin ${{ inputs.source-branch }}
      - name: Get version
        id: version
        run: echo "version=$(node -p "require('./libs/sdk-ui/package.json').version")" >> $GITHUB_OUTPUT
